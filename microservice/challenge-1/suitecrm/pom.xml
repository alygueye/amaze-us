<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.challenge.suitecrm</groupId>
  <artifactId>suitecrm</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>data-model</module>
    <module>csv-ingester</module>
    <module>test-support</module>
    <module>kafka-processing</module>
    <module>customers-api</module>
    <module>orders-api</module>
  </modules>
  <packaging>pom</packaging>

  <prerequisites>
    <maven>3.2.5</maven>
  </prerequisites>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>

    <kafka.version>2.0.1</kafka.version>
    <kafka.scala.version>2.12</kafka.scala.version>
    <confluent.version>5.0.1</confluent.version>

    <springfox.version>2.7.0</springfox.version>
    <springboot.version>2.1.2.RELEASE</springboot.version>

    <avro.version>1.8.2</avro.version>

    <cassandra.version>3.6.0</cassandra.version>

    <guava.version>27.0.1-jre</guava.version>

    <junit.version>4.12</junit.version>
    <mockito.version>2.24.0</mockito.version>

    <commons-io.version>2.6</commons-io.version>
    <beanio.version>2.1.0</beanio.version>

    <slf4j-api.version>1.7.25</slf4j-api.version>
    <logback.version>1.2.3</logback.version>

    <achilles-junit.version>6.0.1</achilles-junit.version>
    <commons-cli.version>1.4</commons-cli.version>

    <config.version>1.3.3</config.version>

    <joda-time.version>2.10.1</joda-time.version>

    <assertj-core.version>3.11.1</assertj-core.version>

    <httpclient.version>4.5.7</httpclient.version>
    <jackson.version>2.9.8</jackson.version>

    <commons-math3.version>3.6.1</commons-math3.version>

    <org.mapstruct.version>1.2.0.Final</org.mapstruct.version>

    <jetty.version>9.4.14.v20181114</jetty.version>
    <jersey.version>2.28</jersey.version>

    <commons-collections4.version>4.2</commons-collections4.version>
    <commons-lang3.version>3.8.1</commons-lang3.version>
  </properties>

  <repositories>

    <repository>
      <id>confluent</id>
      <url>http://packages.confluent.io/maven/</url>
    </repository>

  </repositories>

  <profiles>
    <profile>
      <!-- If running with IDEA-->
      <id>local</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <CASSANDRA_CONTACT_POINTS>localhost</CASSANDRA_CONTACT_POINTS>
        <CASSANDRA_PORT>9042</CASSANDRA_PORT>
        <ZOOKEEPER_URLS>localhost:2181</ZOOKEEPER_URLS>
        <KAFKA_BOOTSTRAP_SERVERS>localhost:9092</KAFKA_BOOTSTRAP_SERVERS>
        <SCHEMA_REGISTRY_URL>http://localhost:8081</SCHEMA_REGISTRY_URL>
        <KAFKA_CONNECT_API_URL>http://localhost:8083</KAFKA_CONNECT_API_URL>
      </properties>
    </profile>

    <profile>
      <!-- If running on docker-->
      <id>docker</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <CASSANDRA_CONTACT_POINTS>cassandra</CASSANDRA_CONTACT_POINTS>
        <CASSANDRA_PORT>9042</CASSANDRA_PORT>
        <ZOOKEEPER_URLS>kafka:2181</ZOOKEEPER_URLS>
        <KAFKA_BOOTSTRAP_SERVERS>kafka:9092</KAFKA_BOOTSTRAP_SERVERS>
        <SCHEMA_REGISTRY_URL>http://kafka:8081</SCHEMA_REGISTRY_URL>
        <KAFKA_CONNECT_API_URL>http://kafka:8083</KAFKA_CONNECT_API_URL>
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <!-- Spring dependencies -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${springboot.version}</version>
      </dependency>

      <!-- Cassandra dependencies -->
      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-core</artifactId>
        <version>${cassandra.version}</version>
      </dependency>
      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-mapping</artifactId>
        <version>${cassandra.version}</version>
      </dependency>
      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-extras</artifactId>
        <version>${cassandra.version}</version>
      </dependency>

      <!-- Kafka dependencies -->
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-streams-avro-serde</artifactId>
        <version>${confluent.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-streams</artifactId>
        <version>${kafka.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>


      <!-- APIs Docs -->
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>

     <!-- for kafka stream queryable state store-->
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlet</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-jetty-http</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.inject</groupId>
        <artifactId>jersey-hk2</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jackson</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <!-- Commons libs utility -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>${commons-math3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.beanio</groupId>
        <artifactId>beanio</artifactId>
        <version>${beanio.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>${config.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-jdk8</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${commons-collections4.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.4</version>
        <scope>provided</scope>
      </dependency>

      <dependency><!-- for avro-->
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>

      <!-- Test dependencies -->

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${springboot.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>info.archinnov</groupId>
        <artifactId>achilles-junit</artifactId>
        <version>${achilles-junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_${kafka.scala.version}</artifactId>
        <version>${kafka.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_${kafka.scala.version}</artifactId>
        <version>${kafka.version}</version>
        <classifier>test</classifier>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-streams-test-utils</artifactId>
        <version>${kafka.version}</version>
        <classifier>test</classifier>
      </dependency>


    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-maven-plugin</artifactId>
          <version>${avro.version}</version>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>schema</goal>
                <goal>protocol</goal>
                <goal>idl-protocol</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <sourceDirectory>src/main/avro</sourceDirectory>
            <outputDirectory>${project.build.directory}/generated-sources/avro</outputDirectory>
            <stringType>String</stringType>
            <fieldVisibility>PRIVATE</fieldVisibility>
          </configuration>
        </plugin>

        <!--force discovery of generated classes-->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
          <executions>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-sources</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${springboot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
                <goal>build-info</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <annotationProcessorPaths>
              <path>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
              </path>
              <!-- https://stackoverflow.com/questions/47676369/mapstruct-and-lombok-not-working-togather -->
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.4</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <compilerArg>-Amapstruct.defaultComponentModel=default</compilerArg>
              <compilerArg>-Amapstruct.unmappedTargetPolicy=ERROR</compilerArg>
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <delimiters>
              <delimiter>${*}</delimiter>
              <delimiter>@@*@@</delimiter>
            </delimiters>
            <useDefaultDelimiters>false</useDefaultDelimiters>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>io.swagger</groupId>
          <artifactId>swagger-codegen-maven-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>

        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.28.0</version>
          <configuration>
            <verbose>true</verbose>
            <useColor>true</useColor>
            <images>
              <image>
                <name>suitecrm/${project.artifactId}:latest
                </name>
                <build>
                  <tags>
                    <tag>latest</tag>
                  </tags>
                  <dockerFileDir>${project.basedir}/docker/.</dockerFileDir>
                  <assembly>
                    <descriptorRef>artifact</descriptorRef>
                  </assembly>
                  <filter>@@</filter>
                </build>
              </image>
            </images>
          </configuration>
          <executions>
            <execution>
              <phase>install</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
            <execution>
              <id>build-image</id>
              <phase>package</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
            <execution>
              <id>push-image</id>
              <phase>deploy</phase>
              <goals>
                <goal>push</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>


    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>

    </plugins>
  </build>


</project>