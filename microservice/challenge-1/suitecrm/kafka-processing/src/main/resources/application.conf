include "topics.json"

plateform {
  schema.registry.url="@@SCHEMA_REGISTRY_URL@@"
  bootstrap.servers="@@KAFKA_BOOTSTRAP_SERVERS@@"
}

default.stream.config {
  acks=all
  num.stream.threads=1
  commit.interval.ms=30000
  replication.factor=1
  compression.type=snappy
  max.request.size=10485760
  session.timeout.ms=30000
  default.key.serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
  default.value.serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
  auto.offset.reset=earliest
  specific.avro.reader=true
}


processing.customers {
  inputs {
    ingest_orders=${topic.ingest_orders.name}
    table_products=${topic.store_products.name}
  }
  outputs {
    recommendation=${topic.recommendation.name}
  }

  stores {
      product_store {
        name=product-store
        cacheDisabled=false
      }
  }

  streams-config {
    application.id=topology-customers
    state.dir=/tmp/kafka-streams/topology-customers
  }
}

processing.products {
  inputs {
    ingest_products=${topic.ingest_products.name}
    ingest_product_relations=${topic.ingest_products_relations.name}
    products_events=${topic.products_events.name}
  }
  outputs {
    store_products=${topic.store_products.name}
  }

  stores {
        product_store {
          name=product-store
          cacheDisabled=false
        }
  }

  streams-config {
    application.id=topology-products
    state.dir=/tmp/kafka-streams/topology-products
  }
}